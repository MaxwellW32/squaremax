@tailwind base;
@tailwind components;
@tailwind utilities;

*,
*::before,
*::after {
    /* border: 1px solid red !important; */
}

:root {
    --color1: #2170ba;
    --color2: #f5f5dc;
    --color3: #f0f8ff;

    --shade1: #171717;
    --shade2: #ffffff;
    --shade3: #fafafa;
    --shade4: #eeeeee;

    --bg1: #171717;
    --bg2: #ffffff;

    --fontSizeS: .7rem;
    --fontSizeR: 1rem;
    --fontSizeL: 2rem;
}

*::-webkit-scrollbar {
    width: 7px;
    height: 10px;
}

*::-webkit-scrollbar-track {
    border-radius: 8px;
    background-color: var(--color3);
    border: 1px solid var(--color2);
}

*::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: var(--shade1);
}

body {
    height: 100vh;
    display: grid;
    align-content: flex-start;
    grid-template-rows: auto 1fr;
    overflow-y: clip;

    color: var(--shade1);
    background-color: var(--shade2);
    font-size: var(--fontSizeR);
}

.big {
    height: 5000vh;
    background-color: pink;
}

label {
    font-weight: bold;
    text-transform: capitalize;
}

input,
textarea {
    padding: 1rem;
    border-radius: .2rem;
    border: 1px solid var(--shade1);
}

input[type="color"] {
    appearance: none;
    width: 40px;
    height: 40px;
    border: none;
    cursor: pointer;
    background: transparent;
    padding: 0;
    outline: none;
}

input[type="color"]::-webkit-color-swatch {
    border: 2px solid var(--shade1);
}

input[type="color"]::-moz-color-swatch {
    border: 2px solid var(--shade1);
}

input:focus,
textarea:focus {
    background-color: var(--shade2);
    outline: none;
}

::-webkit-input-placeholder,
::-moz-placeholder {
    white-space: pre-line;
    position: relative;
    top: -7px;
}

h1 {
    font-weight: bold;
    text-transform: capitalize;
    font-size: var(--fontSizeL);
}

h3 {
    font-weight: bold;
    text-transform: capitalize;
}

svg {
    width: 1rem;
    aspect-ratio: 1/1;
    transition: scale 400ms;
}

svg:hover {
    scale: 1.05;
}


section {
    display: grid;
    align-content: flex-start;
}

/* custom classes */
.noScrollBar::-webkit-scrollbar {
    display: none;
}

.mainButton {
    background-color: var(--shade1);
    color: var(--shade2);
    padding: .5rem 1rem;
    text-transform: capitalize;
    font-weight: bold;
    justify-self: flex-start;
    transition: scale 400ms;
}

.mainButton:hover {
    scale: 1.01;
}

.secondaryButton {
    background-color: var(--shade1);
    color: var(--shade2);
    padding: .2rem;
    font-size: var(--fontSizeS);
    text-transform: capitalize;
    font-weight: bold;
    transition: scale 400ms;
}

.secondaryButton:hover {
    scale: 1.01;
}

.tertiaryButton {
    background-color: var(--shade1);
    color: var(--shade2);
    text-transform: capitalize;
    font-weight: bold;
    padding: .5rem;
}

.tag {
    background-color: var(--color1);
    color: var(--shade2);
    padding: .5rem 1rem;
    text-transform: uppercase;
    font-weight: bold;
}

.snap {
    scroll-snap-type: x mandatory;
}

.snap>* {
    scroll-snap-align: start;
}

.toolTip::before {
    content: attr(data-tooltip);
    color: var(--shade1);
    background-color: var(--shade2);
    border: 1px solid var(--shade1);
    padding: .5rem;
    position: fixed;
    /* top: 0; */
    /* left: 50%; */
    translate: var(--translate, 0 -100%);
    margin: 1rem;
    opacity: 0;
    pointer-events: none;
    user-select: none;
    white-space: nowrap;
    transition: opacity 400ms;
    font-size: var(--fontSizeS);
    z-index: 99999;
    text-transform: capitalize;
}

.toolTip:hover::before {
    animation: slowOpacity 600ms 2s forwards;
}


@keyframes slowOpacity {
    to {
        opacity: 1;
    }
}

.reset * {
    all: unset;
    display: revert;
    box-sizing: border-box;
}

.hideNav {
    display: none !important;
}

.hideNavButton {
    transition: opacity 400ms ease;
    animation: fadeOut 3s ease;
    opacity: 0;
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.hideNavButton:hover {
    opacity: 1;
}

.svgChildFill>svg {
    fill: var(--fill, var(--shade2));
}